{"version":3,"sources":["logo.png","bg_images/bg2.jpg","components/Home.js","components/404.js","bg_images/bg5.jpg","components/Admin.js","bg_images/bg7.jpg","components/Results.js","config.js","bg_images/bg3.jpg","components/AdminSignIn.js","bg_images/bg4.jpg","components/CodeCheck.js","App.js","serviceWorker.js","index.js","styles.module.css"],"names":["MainPage","history","useHistory","style","backgroundImage","background","className","styles","bg","appHeader","src","logo","alt","height","margin","circle","Button","id","variant","onClick","push","PageNotFound","document","addEventListener","e","preventDefault","padding","textAlign","fontSize","Admin","useState","examcode","setTitle","formlink","setFormlink","examtimer","setTimer","color","type","name","placeholder","value","onChange","target","class","autofocus","min","display","justifyContent","con_db","firebase","database","ref","on","snapshot","s","val","console","log","child","set","alert","width","localStorage","clear","window","location","href","Results","props","state","studentslist","studentsmobilelist","childcode","sessionStorage","getItem","studentlist","forEach","snap","setState","studentmobilelist","resultsHeader","this","map","data","photo","sname","semail","fullscreen","phone","book","laptop","noFace","face","left","right","ctrl","borderRadius","audiorec","GoToAdmin","React","Component","config","default","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","require","AdminSignIn","currentUser","setCurrentUser","to","onSubmit","elements","email","password","signInWithEmailAndPassword","then","u","catch","error","swal","for","autocomplete","CodeCheck","inputcode","setInputcode","code_exist","once","key","setItem","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"sRAAe,MAA0B,iC,gBCA1B,MAA0B,gC,eCsC1BA,EA1BE,WAEf,IAAMC,EAAUC,cAOhB,OACE,qCAAE,qBAAKC,MAAO,CAAEC,gBAAiB,OAASC,EAAa,KAAOC,UAAWC,IAAOC,KAGhF,yBAAQF,UAAWC,IAAOE,UAA1B,UAEE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOC,OAAO,MAAMC,OAAO,IAAIR,UAAWC,IAAOQ,SAAU,uBAC/E,uDACA,wEAAkD,uBAAM,uBAGxD,cAACC,EAAA,EAAD,CAAQC,GAAG,cAAcC,QAAQ,YAAYC,QAhBjD,WACElB,EAAQmB,KAAK,iBAeX,sCCMSC,EAjCM,WAqBnB,OAlBIC,SAASC,kBACXD,SAASC,iBAAiB,eAAe,SAAUC,GACjDA,EAAEC,oBACD,GAgBL,qCAAE,qBAAKtB,MAAO,CAAEC,gBAAiB,OAASC,EAAa,KAAOC,UAAWC,IAAOC,KAChF,yBAAQF,UAAWC,IAAOE,UAA1B,UAEE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOC,OAAO,MAAMC,OAAO,IAAIR,UAAWC,IAAOQ,SAAU,uBAC/E,uCACA,qDAA+B,uBAC/B,mBAAGZ,MAAO,CAAEuB,QAAS,OAAQC,UAAW,SAAUC,SAAU,QAA5D,sH,gBCjCW,G,MAAA,IAA0B,iCC+G1BC,EAtGD,WACZ,IAAM5B,EAAUC,cAEhB,EAA6B4B,mBAAS,IAAtC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAkBC,EAAlB,KA0CA,OACE,qCAAE,qBAAKjC,MAAO,CAAEC,gBAAiB,OAASC,EAAa,KAAOC,UAAWC,IAAOC,GAA9E,eACE,sBAAKF,UAAWC,IAAOE,UAAvB,UACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOC,OAAO,MAAMC,OAAO,IAAIR,UAAWC,IAAOQ,SAAU,uBAC/E,oBAAIZ,MAAO,CAAEkC,MAAO,SAApB,SACE,mDACG,uBAEL,sBAAKlC,MAAO,CAAEuB,QAAS,UAAvB,UACA,uBAAOvB,MAAO,CAAEkC,MAAO,QAAST,SAAU,QAA1C,wCACA,uBAAOU,KAAK,OACVC,KAAK,WACLtB,GAAG,WACHuB,YAAY,iBACZC,MAAOV,EACPW,SAtDe,SAAClB,GACxBQ,EAASR,EAAEmB,OAAOF,QAsDVG,MAAM,kBACNC,WAAS,IACX,uBAAK,uBAEL,uBAAO1C,MAAO,CAAEkC,MAAO,QAAST,SAAU,QAA1C,qCACA,uBAAOU,KAAK,OACVC,KAAK,WACLtB,GAAG,WACHuB,YAAY,YACZC,MAAOR,EACPS,SA9De,SAAClB,GACxBU,EAAYV,EAAEmB,OAAOF,QA8DbG,MAAM,oBACR,uBAAM,uBAEN,uBAAOzC,MAAO,CAAEkC,MAAO,QAAST,SAAU,QAA1C,0CACA,uBAAOU,KAAK,SACVC,KAAK,YACLtB,GAAG,YACH6B,IAAI,IACJN,YAAY,gBACZC,MAAON,EACPO,SAtEY,SAAClB,GACrBY,EAASZ,EAAEmB,OAAOF,QAsEVG,MAAM,oBACR,uBA/BA,IA+BO,uBAEP,qBAAKzC,MAAO,CAAE4C,QAAS,OAAQC,eAAgB,eAAgBlC,OAAQ,UAAvE,SACE,wBAAQ8B,MAAM,kBAAkBzB,QAvE1C,WAEE,IAAM8B,EAASC,IAASC,WAAWC,IAAI,WAEvCH,EAAOI,GAAG,SAAS,SAACC,GAElB,IAAIC,EAAID,EAASE,MACjBC,QAAQC,IAAIH,GACZN,EAAOU,MAAM5B,GAAU6B,IAAI,CACzB3B,SAAUA,EACVE,UAAWA,IAEb0B,MAAM,0BACN5D,EAAQmB,KAAK,SA0DkDjB,MAAO,CAAE2D,MAAO,QAAzE,2BAGF,sBAAK3D,MAAO,CAAE4C,QAAS,OAAQC,eAAgB,gBAAiBlC,OAAQ,UAAxE,UACE,wBAAQ8B,MAAM,kBAAkBzB,QAxDzC,WACClB,EAAQmB,KAAK,eAuDL,0BACA,wBAAQkB,KAAK,SAASM,MAAM,iBAAiBzB,QApDvD,WACM4C,aAAaC,QACbC,OAAOC,SAASC,KAAO,KAkDnB,iCCvGG,MAA0B,gCCmK1BC,G,wDAvJb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,aAAc,GACdC,mBAAoB,IAJL,E,qDAQnB,WAAqB,IAAD,OACdC,EAAYC,eAAeC,QAAQ,aAGvCzB,IAASC,WAAWC,IAAI,gBAAgBO,MAAMc,GAAWpB,GAAG,SAAS,SAAAC,GAEnE,IAAIsB,EAAc,GAClBtB,EAASuB,SAAQ,SAAAC,GAEfF,EAAYxD,KAAK0D,EAAKtB,UAGxB,EAAKuB,SAAS,CAAER,aAAcK,OAKhC1B,IAASC,WAAWC,IAAI,sBAAsBO,MAAMc,GAAWpB,GAAG,SAAS,SAAAC,GAEzE,IAAI0B,EAAoB,GACxB1B,EAASuB,SAAQ,SAAAC,GAEfE,EAAkB5D,KAAK0D,EAAKtB,UAG9B,EAAKuB,SAAS,CAAEP,mBAAoBQ,S,uBAKxC,WACEjB,aAAaC,QACbC,OAAOC,SAASC,KAAO,W,oBAGzB,WACE,OACE,qCAAE,qBAAKhE,MAAO,CAAEC,gBAAiB,OAASC,EAAa,KAAOC,UAAWC,IAAOC,KAC9E,sBAAKF,UAAWC,IAAO0E,cAAvB,UACE,qBAAKvE,IAAKC,EAAMC,IAAI,OAAOC,OAAO,MAAMC,OAAO,IAAIR,UAAWC,IAAOQ,SAAU,uBAC/E,sBAAK6B,MAAM,YAAX,UACE,gEAAuC,0BAGzC,qBAAKzC,MAAO,CAAEW,OAAQ,UAAtB,SACE,wBAAOG,GAAG,UAAU2B,MAAM,gBAA1B,UACE,uBAAOA,MAAM,aAAb,SACE,+BACE,sCACA,uCACA,gDACA,uCACA,sCACA,wCACA,wCACA,8CACA,0CACA,2CACA,qCACA,sCACA,uCACA,4CAGJ,gCACGsC,KAAKZ,MAAMC,aAAaY,KAAI,SAAAC,GACdA,EAAKC,MAElB,OACE,qBAAI/E,UAAU,OAAd,UACE,6BAAK8E,EAAKE,QACV,6BAAKF,EAAKG,SACV,6BAAKH,EAAKI,aACV,6BAAKJ,EAAKK,QACV,6BAAKL,EAAKM,OACV,6BAAKN,EAAKO,SACV,6BAAKP,EAAKQ,SACV,6BAAKR,EAAKS,OACV,6BAAKT,EAAKU,OACV,6BAAKV,EAAKW,QACV,6BAAKX,EAAKxE,MACV,6BAAKwE,EAAKY,OACV,mCAAM,qBAAKtF,IAAK0E,EAAKC,MAAOzE,IAAI,yBAAyBkD,MAAM,QAAQjD,OAAO,QAAQV,MAAO,CAAE8F,aAAc,SAC7G,6BAAKb,EAAKc,2BAWtB,sBAAKtD,MAAM,YAAX,UACE,gEAAuC,0BAGzC,qBAAKzC,MAAO,CAAEW,OAAQ,UAAtB,SACE,wBAAOG,GAAG,UAAU2B,MAAM,gBAA1B,UACE,uBAAOA,MAAM,aAAb,SACE,+BACE,sCACA,uCACA,gDACA,uCACA,sCACA,wCACA,mDAGJ,gCACGsC,KAAKZ,MAAME,mBAAmBW,KAAI,SAAAC,GACpBA,EAAKC,MAElB,OACE,qBAAI/E,UAAU,OAAd,UACE,6BAAK8E,EAAKE,QACV,6BAAKF,EAAKG,SACV,6BAAKH,EAAKI,aACV,6BAAKJ,EAAKK,QACV,6BAAKL,EAAKM,OACV,6BAAKN,EAAKO,SAGV,mCAAM,qBAAKjF,IAAK0E,EAAKC,MAAOzE,IAAI,qBAAqBkD,MAAM,QAAQjD,OAAO,QAAQV,MAAO,CAAE8F,aAAc,yBAWrH,qBAAK3F,UAAU,eAAf,SAA8B,cAACU,EAAA,EAAD,CAAQG,QAAS+D,KAAKiB,UAAWjF,QAAQ,YAAYmB,MAAM,UAA3D,2C,GAnJlB+D,IAAMC,Y,QCNtBC,G,MAASpD,IAASqD,QAAQC,cAAc,CAC1CC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,wDACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,kBAIJV,GADKpD,IAAS+D,OACdX,G,iBCfA,MAA0B,gCCazCY,EAAQ,IAGR,IA+DeC,EA/DK,WAElB,MAAsCrF,mBAAS,MAA/C,mBAAOsF,EAAP,KAAoBC,EAApB,KAiBA,OAAID,EACO,cAAC,IAAD,CAAUE,GAAG,WAQtB,qCAAE,qBAAKnH,MAAO,CAAEC,gBAAiB,OAASC,EAAa,KAAOC,UAAWC,IAAOC,KAG5E,sBAAKF,UAAWC,IAAOE,UAAvB,UACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOC,OAAO,MAAMC,OAAO,IAAIR,UAAWC,IAAOQ,SAAU,uBAC/E,oBAAIZ,MAAO,CAAEkC,MAAO,SAApB,qBAA2C,uBAC3C,uBAAMkF,SA/BO,SAAC/F,GACpBA,EAAEC,iBACF,MAA4BD,EAAEmB,OAAO6E,SAA7BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,IACEpB,EAAOW,OAAOU,2BAA2BF,EAAMhF,MAAOiF,EAASjF,OAAOmF,MAAK,SAACC,GAC1ER,GAAe,MACdS,OAAM,SAACC,GAERC,IAAK,uCAGP,MAAOD,GACPlE,MAAMkE,KAmBF,UACE,uBAAOE,IAAI,QAAQ9H,MAAO,CAAEkC,MAAO,QAAST,SAAU,QAAtD,qBAA+E,uBAC/E,uBAAOU,KAAK,QACVC,KAAK,QACLtB,GAAG,QACHuB,YAAY,cACZI,MAAM,kBACNsF,aAAa,QACbrF,WAAS,IACX,uBAAK,uBACL,uBAAOoF,IAAI,WAAW9H,MAAO,CAAEkC,MAAO,QAAST,SAAU,QAAzD,wBAAqF,uBACrF,uBAAOU,KAAK,WACVC,KAAK,WACLtB,GAAG,WACHuB,YAAY,WACZ0F,aAAa,mBACbtF,MAAM,oBACR,uBAAM,uBACN,sBAAKzC,MAAO,CAAE4C,QAAS,OAAQC,eAAgB,gBAAiBlC,OAAQ,UAAxE,UACE,wBAAQwB,KAAK,QAAQM,MAAM,kBAA3B,mBACA,wBAAQN,KAAK,SAASM,MAAM,kBAA5B,iCCtEC,MAA0B,gCCuD1BuF,EA9CG,WAChB,IAAMlI,EAAUC,cACd,EAAkC4B,mBAAS,IAA3C,mBAAOsG,EAAP,KAAkBC,EAAlB,KAKD,IAAIC,GAAa,EAyBhB,OACA,qCAAE,qBAAKnI,MAAO,CAAEC,gBAAiB,OAASC,EAAa,KAAOC,UAAWC,IAAOC,KAChF,sBAAKF,UAAWC,IAAOE,UAAvB,UACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOC,OAAO,MAAMC,OAAO,IAAIR,UAAWC,IAAOQ,SAAU,uBAC/E,oBAAIZ,MAAO,CAAEkC,MAAO,SAApB,SAA+B,oDAA6B,uBAC5D,uBAAOlC,MAAO,CAAEkC,MAAO,QAAST,SAAU,QAA1C,+BACA,uBAAOU,KAAK,OAAOC,KAAK,YAAYtB,GAAG,YAAYyB,SAlCrD,SAA2BlB,GAC3B6G,EAAa7G,EAAEmB,OAAOF,QAiC4DG,MAAM,kBAAkBH,MAAO2F,EAAW5F,YAAY,cACtI,uBACA,wBAAQI,MAAM,kBAAkBzB,QA9BlC,WACgB+B,IAASC,WAAWC,IAAI,gBAAgBmF,KAAK,SAAQ,SAACjF,GAClEA,EAASuB,SAAQ,SAASvB,GAEPA,EAASkF,MAERJ,IAEd1D,eAAe+D,QAAQ,YAAaL,GAEpCE,GAAa,EACbN,IAAK,WACL/H,EAAQmB,KAAK,iBAGC,IAAfkH,GACDN,IAAK,sBAcX,2BCjCAU,E,4JACJ,WACE,OAEE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7I,IACjC,cAAC,IAAD,CAAO2I,OAAK,EAACC,KAAK,SAASC,UAAWhH,IACtC,cAAC,IAAD,CAAO8G,OAAK,EAACC,KAAK,WAAWC,UAAWzE,IACxC,cAAC,IAAD,CAAOuE,OAAK,EAACC,KAAK,eAAeC,UAAW1B,IAC5C,cAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,aAAaC,UAAWV,IAI1C,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,OAAOC,UAAWxH,IACpC,cAAC,IAAD,CAAUiG,GAAG,kB,GAfLjB,aAsBHqC,IC1BKI,QACW,cAA7B7E,OAAOC,SAAS6E,UAEe,UAA7B9E,OAAOC,SAAS6E,UAEhB9E,OAAOC,SAAS6E,SAASC,MACvB,2DCXNC,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7H,SAAS8H,eAAe,SD+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3B,MAAK,SAAA4B,GACJA,EAAaC,gBAEd3B,OAAM,SAAAC,Q,kBE/Hb2B,EAAOC,QAAU,CAAC,GAAK,mBAAmB,UAAY,0BAA0B,iBAAmB,iCAAiC,cAAgB,8BAA8B,OAAS,uBAAuB,UAAY,6B","file":"static/js/main.3dea8ce4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6e8e400a.png\";","export default __webpack_public_path__ + \"static/media/bg2.f1145cb1.jpg\";","//import config from \"../config\";\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport logo from './../logo.png';\nimport './../App.css';\nimport styles from './../styles.module.css';\nimport background from './../bg_images/bg2.jpg';\n//import { Redirect } from \"react-router-dom\";\n//import { AuthContext } from \"./Auth\";\nimport Button from '@material-ui/core/Button';\n\n\nconst MainPage = () => {\n\n  const history = useHistory();\n  \n  function handleClickAdmin() {\n    history.push(\"/adminsignin\")\n\n  }\n\n  return (\n    <><div style={{ backgroundImage: \"url(\" + background + \")\" }} className={styles.bg}>\n\n    </div>\n    <header className={styles.appHeader}>\n\n      <img src={logo} alt=\"logo\" height=\"250\" margin=\"0\" className={styles.circle} /><br />\n      <p>Welcome to IntelliProc</p>\n      <small>Dual camera based proctoring system</small><br /><br/>\n\n      {/* <Button id=\"homeButtons\" style={{ fontSize: '15px' }} variant=\"contained\" size=\"medium\" onClick={handleClick}>Start Mobile Proctoring</Button> */}\n      <Button id=\"homeButtons\" variant=\"contained\" onClick={handleClickAdmin}>Teacher Dashboard</Button>\n      {/* <Button id=\"homeButtons\" variant=\"contained\" onClick={headpose}>Headpose</Button> */}\n    </header></>\n  );\n}\n\nexport default MainPage;","import React from 'react'\nimport styles from './../styles.module.css';\nimport logo from './../logo.png';\nimport background from './../bg_images/bg2.jpg';\n\nconst PageNotFound = () => {\n\n  //Disable Right click\n  if (document.addEventListener) {\n    document.addEventListener('contextmenu', function (e) {\n      e.preventDefault();\n    }, false);\n  }\n\n  // // Alert on Tab Changed within the Same browser Window\n  // function handleVisibilityChange() {\n  //   if (document.hidden) {\n  //     swal(\"Tab Change Detected\", \"Action has been Recorded\", \"error\");\n  //     // the page is hidden\n  //   } else {\n  //     // the page is visible\n  //   }\n  // }\n\n  // document.addEventListener(\"visibilitychange\", handleVisibilityChange, false);\n\n  return (\n  <><div style={{ backgroundImage: \"url(\" + background + \")\" }} className={styles.bg}></div>\n  <header className={styles.appHeader}>\n\n    <img src={logo} alt=\"logo\" height=\"250\" margin=\"0\" className={styles.circle} /><br />\n    <h2> 404 </h2>\n    <small> Page Not Found </small><br />\n    <p style={{ padding: '30px', textAlign: 'center', fontSize: '20px' }}>The Specified file was not found on the website. Please check the URL for mistakes and try again.</p>\n  </header></>\n  )\n}\n\nexport default PageNotFound;","export default __webpack_public_path__ + \"static/media/bg5.c3277550.jpg\";","import React, { useState} from 'react';\n//import config from \"../config\";\nimport firebase from \"firebase/app\";\nimport './Results.css';\nimport styles from './../styles.module.css';\nimport logo from './../logo.png';\nimport background from './../bg_images/bg5.jpg';\nimport { Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nconst Admin = () => {\n  const history = useHistory();\n\n  const [examcode, setTitle] = useState('')\n  const [formlink, setFormlink] = useState('')\n  const [examtimer, setTimer] = useState('')\n  //\n\n  const onChangeexamcode = (e) => {\n    setTitle(e.target.value);\n  };\n  const onChangeformlink = (e) => {\n    setFormlink(e.target.value);\n  };\n  const onChangeTimer = (e) => {\n    setTimer(e.target.value);\n  };\n\n  function handleClicksub() {\n    \n    const con_db = firebase.database().ref(\"con_dbs\");\n\n    con_db.on('value', (snapshot) => {\n  \n      var s = snapshot.val()\n      console.log(s)\n      con_db.child(examcode).set({\n        formlink: formlink,\n        examtimer: examtimer\n      });\n      alert(\"The form was submitted\");\n      history.push(\"/\");\n    \n  });\n  }\n    \n  \n   function results(){\n    history.push('/codecheck');\n\n  }\n\n  function logout(){\n        localStorage.clear();\n        window.location.href = '/';\n    };\n\n  return (\n    <><div style={{ backgroundImage: \"url(\" + background + \")\" }} className={styles.bg}> </div>\n        <div className={styles.appHeader}>\n          <img src={logo} alt=\"logo\" height=\"200\" margin=\"0\" className={styles.circle} /><br />\n          <h2 style={{ color: 'white' }}>\n            <i>Welcome Teacher!</i>\n          </h2><br/>\n\n          <div style={{ padding: '0 63px' }}>\n          <label style={{ color: 'white', fontSize: '20px' }}>Unique code for the exam: </label>\n          <input type=\"text\"\n            name=\"examcode\"\n            id=\"examcode\"\n            placeholder=\"Enter the Code\"\n            value={examcode}\n            onChange={onChangeexamcode}\n            class=\"form-control-lg\"\n            autofocus />\n          <br/><br/>\n\n          <label style={{ color: 'white', fontSize: '20px' }}>Examination form Link: </label>\n          <input type=\"text\"\n            name=\"formlink\"\n            id=\"formlink\"\n            placeholder=\"Form Link\"\n            value={formlink}\n            onChange={onChangeformlink}\n            class=\"form-control-lg\" />\n          <br /><br/>\n\n          <label style={{ color: 'white', fontSize: '20px' }}>Exam Duration (in minutes): </label>\n          <input type=\"number\"\n            name=\"examtimer\"\n            id=\"examtimer\"\n            min=\"2\"\n            placeholder=\"Exam Duration\"\n            value={examtimer}\n            onChange={onChangeTimer}\n            class=\"form-control-lg\" />\n          <br /> <br/>\n\n          <div style={{ display: 'flex', justifyContent: 'space-evenly', margin: '30px 0'}}>\n            <button class=\"btn btn-primary\" onClick={handleClicksub} style={{ width: '100%'}}>Create Test</button>\n          </div>\n          \n          <div style={{ display: 'flex', justifyContent: 'space-between', margin: '30px 0'}}>\n            <button class=\"btn btn-success\" onClick={results} >Test Results</button>\n            <button type=\"logout\" class=\"btn btn-danger\" onClick={logout} >LogOut</button>\n          </div>\n          </div>\n\n      </div></>\n    \n  )\n}\nexport default Admin;","export default __webpack_public_path__ + \"static/media/bg7.746e5179.jpg\";","import React from 'react'\nimport firebase from \"firebase/app\";\nimport { Button } from '@material-ui/core';\nimport './Results.css';\nimport logo from './../logo.png';\nimport styles from './../styles.module.css';\nimport background from './../bg_images/bg7.jpg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Results extends React.Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      studentslist: [],\n      studentsmobilelist: []\n    }\n  }\n\n  componentDidMount() {\n    var childcode = sessionStorage.getItem(\"inputcode\");\n    //console.log(\"Checktable\", childcode);\n\n    firebase.database().ref(\"stud_records\").child(childcode).on(\"value\", snapshot => {\n\n      let studentlist = [];\n      snapshot.forEach(snap => {\n        // snap.val() is the dictionary with all your keys/values from the 'stud_records' path\n        studentlist.push(snap.val());\n        //console.log(\"Chekit\" ,studentlist);\n      });\n      this.setState({ studentslist: studentlist });\n    });\n\n    \n\n    firebase.database().ref(\"studmobile_records\").child(childcode).on(\"value\", snapshot => {\n\n      let studentmobilelist = [];\n      snapshot.forEach(snap => {\n        // snap.val() is the dictionary with all your keys/values from the 'stud_records' path\n        studentmobilelist.push(snap.val());\n        //console.log(\"Chekit\" ,studentlist);\n      });\n      this.setState({ studentsmobilelist: studentmobilelist });\n    });\n  }\n\n\n  GoToAdmin() {\n    localStorage.clear();\n    window.location.href = '/admin';\n  }\n\n  render() {\n    return (\n      <><div style={{ backgroundImage: \"url(\" + background + \")\" }} className={styles.bg}></div>\n        <div className={styles.resultsHeader}>\n          <img src={logo} alt=\"logo\" height=\"200\" margin=\"0\" className={styles.circle} /><br />\n          <div class=\"givecolor\">\n            <h3>CHEAT SCORE FOR LAPTOP RECORDS</h3><br />\n          </div>\n\n          <div style={{ margin: '0 10px' }}>\n            <table id=\"example\" class=\"display table\">\n              <thead class=\"thead-dark\">\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>ExitFullScreen</th>\n                  <th>Phone</th>\n                  <th>Book</th>\n                  <th>Laptop</th>\n                  <th>noFace</th>\n                  <th>MultipleFace</th>\n                  <th>LeftTurn</th>\n                  <th>RightTurn</th>\n                  <th>Alt</th>\n                  <th>ctrl</th>\n                  <th>Photo</th>\n                  <th>Audio</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.studentslist.map(data => {\n                  var base64 = data.photo;\n                  //console.log(\"show name\", base64);\n                  return (\n                    <tr className=\"pool\">\n                      <td>{data.sname}</td>\n                      <td>{data.semail}</td>\n                      <td>{data.fullscreen}</td>\n                      <td>{data.phone}</td>\n                      <td>{data.book}</td>\n                      <td>{data.laptop}</td>\n                      <td>{data.noFace}</td>\n                      <td>{data.face}</td>\n                      <td>{data.left}</td>\n                      <td>{data.right}</td>\n                      <td>{data.alt}</td>\n                      <td>{data.ctrl}</td>\n                      <td> {<img src={data.photo} alt=\"Student Identification\" width=\"150px\" height=\"100px\" style={{ borderRadius: '5px' }} />}\n                      <td>{data.audiorec}</td>\n                      </td>\n                    </tr>\n                  );\n                })}\n\n              </tbody>\n\n            </table>\n          </div>\n\n          <div class=\"givecolor\">\n            <h3>CHEAT SCORE FOR MOBILE RECORDS</h3><br />\n          </div>\n\n          <div style={{ margin: '0 10px' }}>\n            <table id=\"example\" class=\"display table\">\n              <thead class=\"thead-dark\">\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>ExitFullScreen</th>\n                  <th>Phone</th>\n                  <th>Book</th>\n                  <th>Laptop</th>\n                  <th>Device Photo</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.studentsmobilelist.map(data => {\n                  var base64 = data.photo;\n                  //console.log(\"show name\", base64);\n                  return (\n                    <tr className=\"pool\">\n                      <td>{data.sname}</td>\n                      <td>{data.semail}</td>\n                      <td>{data.fullscreen}</td>\n                      <td>{data.phone}</td>\n                      <td>{data.book}</td>\n                      <td>{data.laptop}</td>\n\n\n                      <td> {<img src={data.photo} alt=\"presence of laptop\" width=\"150px\" height=\"100px\" style={{ borderRadius: '5px' }} />}\n                      </td>\n                    </tr>\n                  );\n                })}\n\n              </tbody>\n\n            </table>\n          </div>\n\n          <div className=\"center-block\"><Button onClick={this.GoToAdmin} variant=\"contained\" color=\"primary\"> Return To Admin </Button></div>\n        </div></>\n\n    );\n  }\n} \n\nexport default Results;","import firebase from 'firebase';\nimport 'firebase/auth';\n\nconst config = firebase.default.initializeApp({\n    apiKey: \"AIzaSyCyiJgKu6I43dcX00HRCCuKgaNcQPIqvSg\",\n    authDomain: \"intelliproc-6c838.firebaseapp.com\",\n    databaseURL: \"https://intelliproc-6c838-default-rtdb.firebaseio.com\",\n    projectId: \"intelliproc-6c838\",\n    storageBucket: \"intelliproc-6c838.appspot.com\",\n    messagingSenderId: \"1055373727921\",\n    appId: \"1:1055373727921:web:c4e8c3b8eed586f71c6a90\",\n    measurementId: \"G-1M45V193PY\"\n});\n\nexport const auth = firebase.auth();\nexport default config;\n","export default __webpack_public_path__ + \"static/media/bg3.75886d21.jpg\";","import config from \"../config\";\nimport React, { useState } from \"react\";\n//import TextField from \"@material-ui/core/TextField\";\n//import { useHistory } from 'react-router-dom';\nimport { Redirect } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport './Results.css';\nimport styles from './../styles.module.css';\nimport logo from './../logo.png';\nimport background from './../bg_images/bg3.jpg';\n//import Button from '@material-ui/core/Button';\nimport firebase from \"firebase/app\";\n// import Button from '@material-ui/core/Button';\nrequire('firebase/auth')\n\n\nconst AdminSignIn = () => {\n \n  const [currentUser, setCurrentUser] = useState(null);    \n  const handleSubmit = (e) => {\n    e.preventDefault();    \n    const { email, password } = e.target.elements;\n    try {\n      config.auth().signInWithEmailAndPassword(email.value, password.value).then((u)=>{\n        setCurrentUser(true);\n      }).catch((error) =>\n      {\n        swal(\"Please Contact Admin To Register\");\n      });    \n      \n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  if (currentUser) {\n      return <Redirect to=\"/admin\" />;\n  }\n\n  // const handleLogout=() =>{\n  //   config.auth.signOut();\n  // };\n   \n  return (\n    <><div style={{ backgroundImage: \"url(\" + background + \")\" }} className={styles.bg}>\n\n    </div>\n        <div className={styles.appHeader}>\n          <img src={logo} alt=\"logo\" height=\"200\" margin=\"0\" className={styles.circle} /><br />\n          <h2 style={{ color: 'white' }}>Sign In</h2><br />\n          <form onSubmit={handleSubmit}>\n            <label for=\"email\" style={{ color: 'white', fontSize: '20px' }}>Email: </label><br />\n            <input type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              placeholder=\"Enter email\"\n              class=\"form-control-lg\"\n              autocomplete=\"email\"\n              autofocus />\n            <br/><br />\n            <label for=\"password\" style={{ color: 'white', fontSize: '20px' }}>Password: </label><br />\n            <input type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              autocomplete=\"current-password\"\n              class=\"form-control-lg\" />\n            <br /><br />\n            <div style={{ display: 'flex', justifyContent: 'space-between', margin: '30px 0'}}>\n              <button type=\"reset\" class=\"btn btn-primary\">Reset</button>\n              <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n              {/* <input type=\"submit\" class=\"btn btn-success\"/> */}\n            </div>\n          </form>\n      </div></>\n  );\n}\n\n\nexport default AdminSignIn;\n","export default __webpack_public_path__ + \"static/media/bg4.8d8d7a45.jpg\";","import React, { useState } from 'react';\nimport firebase from \"firebase/app\";\nimport { useHistory } from 'react-router-dom'\nimport { Button } from '@material-ui/core';\nimport styles from './../styles.module.css';\nimport logo from './../logo.png';\nimport background from './../bg_images/bg4.jpg';\n//import { Redirect } from \"react-router-dom\";\nimport swal from 'sweetalert';\nconst CodeCheck = () => {\n  const history = useHistory();\n    const [inputcode, setInputcode] = useState('');\n\n    function onChangeInputcode(e) {\n    setInputcode(e.target.value);\n  }\n   var code_exist = false;\n  \n  \n    function Getdata() {\n        const res = firebase.database().ref(\"stud_records\").once('value',(snapshot)=>{\n        snapshot.forEach(function(snapshot) {\n\n            var childKey = snapshot.key;\n            //console.log(\"check childkey\", childKey)\n            if(childKey === inputcode)\n            {\n              sessionStorage.setItem(\"inputcode\", inputcode);\n              //console.log(\"Show sucess\" ,childKey);\n              code_exist = true;\n              swal(\"Success\");\n              history.push(\"/results\"); \n            }\n          }); \n          if(code_exist === false){\n            swal(\"Incorrect Code\");\n          }        \n      });      \n    }\n  \n\n    return (\n    <><div style={{ backgroundImage: \"url(\" + background + \")\" }} className={styles.bg}></div>\n    <div className={styles.appHeader}>\n      <img src={logo} alt=\"logo\" height=\"200\" margin=\"0\" className={styles.circle} /><br />\n      <h2 style={{ color: 'white' }}><i>Verify Exam Code!</i></h2><br/>\n      <label style={{ color: 'white', fontSize: '20px' }}>Enter exam code: </label>\n      <input type=\"text\" name=\"inputcode\" id=\"inputcode\" onChange={onChangeInputcode} class=\"form-control-lg\" value={inputcode} placeholder=\"Exam Code\"></input>\n      <br></br>\n      <button class=\"btn btn-primary\" onClick={Getdata}>Submit</button>\n    </div></>\n\n  )\n}\n\nexport default CodeCheck;","import React, { Component } from 'react';\n\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Redirect, } from 'react-router-dom'\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n  \n\n// Pages\n// Here is where all the pages are connected to each other\n\nimport MainPage from './components/Home'\nimport PageNotFound from './components/404'\nimport Admin from './components/Admin'\nimport Results from './components/Results'\nimport AdminSignIn from './components/AdminSignIn'\nimport CodeCheck from './components/CodeCheck'\nclass App extends Component {\n  render() {\n    return (\n      \n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/admin\" component={Admin} />\n          <Route exact path=\"/results\" component={Results} />\n          <Route exact path=\"/adminsignin\" component={AdminSignIn} />\n          <Route exact path=\"/codecheck\" component={CodeCheck} />\n        \n\n\n          <Route exact path=\"/404\" component={PageNotFound} />\n          <Redirect to=\"/404\" />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n         // console.log('This web app is being served cache-first by a service ' +'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              //console.log( 'New content is available and will be used when all ' +'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              //console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n     // console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n     // console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        //console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"styles_bg__2wJtX\",\"appHeader\":\"styles_appHeader__3Qqwz\",\"fullScreenHeader\":\"styles_fullScreenHeader__29ZuF\",\"resultsHeader\":\"styles_resultsHeader__72Z9f\",\"circle\":\"styles_circle__1VtF5\",\"pullRight\":\"styles_pullRight__20G68\"};"],"sourceRoot":""}